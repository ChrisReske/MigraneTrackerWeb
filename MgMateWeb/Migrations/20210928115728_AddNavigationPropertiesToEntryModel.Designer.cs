// <auto-generated />
using System;
using MgMateWeb.Persistence.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MgMateWeb.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210928115728_AddNavigationPropertiesToEntryModel")]
    partial class AddNavigationPropertiesToEntryModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MgMateWeb.Models.EntryModels.AccompanyingSymptom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AccompanyingSymptoms");
                });

            modelBuilder.Entity("MgMateWeb.Models.EntryModels.Entry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccompanyingSymptomId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("HoursOfActivity")
                        .HasColumnType("real");

                    b.Property<float>("HoursOfIncapacitation")
                        .HasColumnType("real");

                    b.Property<float>("HoursOfPain")
                        .HasColumnType("real");

                    b.Property<int?>("MedicationId")
                        .HasColumnType("int");

                    b.Property<int>("PainIntensity")
                        .HasColumnType("int");

                    b.Property<int?>("PainTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("TriggerId")
                        .HasColumnType("int");

                    b.Property<bool>("WasPainIncreasedDuringPhysicalActivity")
                        .HasColumnType("bit");

                    b.Property<int?>("WeatherDataId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccompanyingSymptomId");

                    b.HasIndex("MedicationId");

                    b.HasIndex("PainTypeId");

                    b.HasIndex("TriggerId");

                    b.HasIndex("WeatherDataId");

                    b.ToTable("Entries");
                });

            modelBuilder.Entity("MgMateWeb.Models.EntryModels.Medication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MedicationEffectiveness")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Medications");
                });

            modelBuilder.Entity("MgMateWeb.Models.EntryModels.PainType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PainIntensity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PainTypes");
                });

            modelBuilder.Entity("MgMateWeb.Models.EntryModels.Trigger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Triggers");
                });

            modelBuilder.Entity("MgMateWeb.Models.EntryModels.WeatherDataEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Humidity")
                        .HasColumnType("int");

                    b.Property<int>("Pressure")
                        .HasColumnType("int");

                    b.Property<float>("Temperature")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("WeatherData");
                });

            modelBuilder.Entity("MgMateWeb.Models.EntryModels.Entry", b =>
                {
                    b.HasOne("MgMateWeb.Models.EntryModels.AccompanyingSymptom", "AccompanyingSymptom")
                        .WithMany()
                        .HasForeignKey("AccompanyingSymptomId");

                    b.HasOne("MgMateWeb.Models.EntryModels.Medication", "Medication")
                        .WithMany()
                        .HasForeignKey("MedicationId");

                    b.HasOne("MgMateWeb.Models.EntryModels.PainType", "PainType")
                        .WithMany()
                        .HasForeignKey("PainTypeId");

                    b.HasOne("MgMateWeb.Models.EntryModels.Trigger", "Trigger")
                        .WithMany()
                        .HasForeignKey("TriggerId");

                    b.HasOne("MgMateWeb.Models.EntryModels.WeatherDataEntry", "WeatherData")
                        .WithMany()
                        .HasForeignKey("WeatherDataId");

                    b.Navigation("AccompanyingSymptom");

                    b.Navigation("Medication");

                    b.Navigation("PainType");

                    b.Navigation("Trigger");

                    b.Navigation("WeatherData");
                });
#pragma warning restore 612, 618
        }
    }
}
